Fix:

Code:
  ☐ add more examples in docstrings

New ideas:
  ☐ rubber ducky encode/decode
  ☐ save registers https://t.co/pBNRufibY8?amp=1 

Cli:
  ☐ optionally show output window in a split screen window
  ☐ lower the chepy prompt lower. that empty space is not being used
  ☐ pyinstaller package as single file
  ☐ write to file with prompt toolkit path autocomplete
  ☐ pipe input to chepy

Enhance:

Methods:
  ☐ magic method from cyberchef
  ☐ base 16
  ☐ base 36
  ☐ base 62
  ☐ base 91
  ☐ base 92

Github Actions:
  ☐ build pyinstaller artifact for osx
  ☐ build pyinstaller artifact for linux
  ☐ build pyinstaller artifact for windows

Distribution:
  ☐ request to add to kali
  ☐ request to add to brew
  ☐ request to add to apt
  ☐ request to add to aur

Misc:
  ☐ cyberchef recipe to chepy recipe converter

Archive:
  ✔ run script loaded into chepy. script should be a function that takes one arg, and state is passed to arg. fixed function name in script should be passed that can be imported on method call @project(New ideas)
  ✔ use $EDITOR to open state in an editor https://github.com/fmoo/python-editor. @project(Cli)
  ✔ run command method to save output to state @project(New ideas)
  ✔ use lazy-import to increase performance @project(Code)
  ✔ rotate bruteforce @project(New ideas)
  ✔ derive pbkdf2 key @project(New ideas)
  ✔ fix zip header @project(New ideas)
  ✘ switch to mypy as linter @project(Code)
  ✔ load_file with binary flag @project(Enhance)
  ✔ incorrect padding in base64 @project(Enhance)
  ✔ optionally disable with arg @project(Enhance)
  ✔ exrex for regex based generation. arg for all combos @project(Methods)
  ✔ raw inflate and deflate @project(Methods)
  ✔ extract base64 method @project(Methods)
  ✔ sort dict by key or value @project(Methods)
  ✔ Change sort list to be able to sort by any data type @project(Methods)
  ✔ loop method to loop over the same thing @project(Methods)
  ✔ get help for a method with ? @project(Cli)
  ✔ allow comments in cli @project(Cli)
